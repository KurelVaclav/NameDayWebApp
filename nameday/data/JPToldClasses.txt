package fg.forrest.namedayapp.service;

import fg.forrest.namedayapp.repository.NamedayRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class NamedayService {

    private final NamedayRepository namedayRepository;

    @Autowired
    public NamedayService(NamedayRepository namedayRepository) {
        this.namedayRepository = namedayRepository;
    }

    public String getNamedayFilePath(){
        return namedayRepository.namedayFilePath.toString();
    }

    public List<String> getNamedays(LocalDate date) throws IOException {
        List<String> namedays = new ArrayList<>();
        String namedayFileContent = Files.readString(Paths.get(namedayRepository.namedayFilePath.toString()), StandardCharsets.UTF_8);
        String[] namedayLines = namedayFileContent.split("\\r?\\n");
        for(String namedayLine : namedayLines) {
            String[] parts = namedayLine.split(":");
            if(parts.length != 2){
                continue;
            }
            LocalDate namedayDate = LocalDate.parse(parts[1].trim());
            if (namedayDate.getMonth() == date.getMonth() && namedayDate.getDayOfMonth() == date.getDayOfMonth()) {
                namedays.add(parts[0].trim());
            }
        }
        return namedays;
    }
}


package fg.forrest.namedayapp.resource;

import org.springframework.web.bind.annotation.*;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.time.LocalDate;
import java.util.HashMap;
import java.util.Map;
import java.util.List;

@RestController
@RequestMapping("/nameday")
public class NamedayResource {

    private final NamedayService namedayService;

    public NamedayResource(NamedayService namedayService) {
        this.namedayService = namedayService;
    }

    @GetMapping("/test")
    public Map<String, Object> getNamedayAndDate() throws IOException{
        LocalDate date = LocalDate.now();
        List<String> namedays = namedayService.getNamedays(date);
        Map<String, Object> response = new HashMap<>();
        response.put("date", date);
        response.put("namedays", namedays);
        return response;
    }

    @PostMapping("/update")
    public void updateNamedayDatabase(@RequestBody String nameDayFileContent) throws IOException{
        Files.write(Paths.get(namedayService.getNamedayFilePath()),nameDayFileContent.getBytes(StandardCharsets.UTF_8));
    }



}



package fg.forrest.namedayapp.repository;
import fg.forrest.namedayapp.model.Nameday;
//import org.springframework.data.jpa.repository.JpaRepository;

import java.io.File;
import java.time.LocalDate;
import java.util.List;

//public interface NamedayRepository extends JpaRepository<Nameday, Long> {
    public interface NamedayRepository {

        File namedayFilePath = new File(System.getProperty("user.dir") + File.separator + "data");

    List<Nameday> findByDate(LocalDate date);

}



package fg.forrest.namedayapp.model;

import java.time.LocalDate;

public class Nameday {
    private Long id;
    private LocalDate date;
    private String nameday;

    public Nameday(){

    }

    public Nameday(Long id, LocalDate date, String nameday) {
        this.id = id;
        this.date = date;
        this.nameday = nameday;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public LocalDate getDate() {
        return date;
    }

    public void setDate(LocalDate date) {
        this.date = date;
    }

    public String getNameday() {
        return nameday;
    }

    public void setNameday(String nameday) {
        this.nameday = nameday;
    }

    @Override
    public String toString() {
        return "Nameday{" +
                "id=" + id +
                ", date=" + date +
                ", nameday='" + nameday + '\'' +
                '}';
    }
}



# MySQL configuration
#spring.datasource.url=jdbc:mysql://localhost:3306/nameday
#spring.datasource.username=root
#spring.datasource.password=1V2a3c4l5a6v+
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#spring.jpa.open-in-view=false
